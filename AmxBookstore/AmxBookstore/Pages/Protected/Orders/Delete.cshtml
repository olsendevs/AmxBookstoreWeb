@page 
@model AmxBookstore.Pages.Protected.Orders.DeleteModel
@{
    ViewData["Title"] = "Delete Order";
}

<h2>Delete Order</h2>

<h3>Are you sure you want to delete this order?</h3>

<div>
    <h4>Order</h4>
    <div>
        <dl class="row">
            <dt class="col-sm-2">Order ID</dt>
            <dd class="col-sm-10" id="OrderId"></dd>
            <dt class="col-sm-2">Total Amount</dt>
            <dd class="col-sm-10" id="TotalAmount"></dd>
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10" id="Status"></dd>
        </dl>
    </div>

    <form id="deleteOrderForm" method="post">
        <input type="hidden" id="OrderIdInput" name="OrderId" />
        <button type="submit" class="btn btn-danger">Delete</button>
        <a asp-page="./Index" class="btn btn-secondary">Cancel</a>
    </form>
</div>

@section Scripts {
    <script>
        async function fetchOrder(id) {
            try {
                const response = await fetchWithToken(`http://localhost:5000/api/v1/Orders/${id}`);
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const order = await response.json();
                document.getElementById('OrderId').innerText = order.id;
                document.getElementById('TotalAmount').innerText = order.totalAmount;
                document.getElementById('Status').innerText = order.status;
                document.getElementById('OrderIdInput').value = order.id;
            } catch (error) {
                console.error('Failed to fetch order:', error);
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            const urlParams = new URLSearchParams(window.location.search);
            const orderId = urlParams.get('id');
            fetchOrder(orderId);
        });

        document.getElementById('deleteOrderForm').addEventListener('submit', async function (event) {
            event.preventDefault();

            const orderId = document.getElementById('OrderIdInput').value;
            try {
                const response = await fetchWithToken(`http://localhost:5000/api/v1/Orders/${orderId}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    window.location.href = './Index';
                } else {
                    const errorData = await response.json();
                    console.error('Failed to delete order:', errorData);
                }
            } catch (error) {
                console.error('Failed to delete order:', error);
            }
        });
    </script>
}
